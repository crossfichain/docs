"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5594],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,p=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=l(t),u=o,m=d["".concat(c,".").concat(u)]||d[u]||f[u]||p;return t?n.createElement(m,a(a({ref:r},s),{},{components:t})):n.createElement(m,a({ref:r},s))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var p=t.length,a=new Array(p);a[0]=u;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<p;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8275:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>p,metadata:()=>i,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const p={order:1,title:"Explorer API"},a="Explorer API",i={unversionedId:"node/api/explorer-api",id:"node/api/explorer-api",title:"Explorer API",description:"Explorer API specifications (OpenAPI)//172.104.249.147:8081/",source:"@site/docs/node/api/explorer-api.md",sourceDirName:"node/api",slug:"/node/api/explorer-api",permalink:"/docs/node/api/explorer-api",draft:!1,editUrl:"https://gitlab.dfmx.ae/xfi/xfi-front/crossfi.docs.front/docs/node/api/explorer-api.md",tags:[],version:"current",frontMatter:{order:1,title:"Explorer API"},sidebar:"nodeSidebar",previous:{title:"CrossFi Node API",permalink:"/docs/node/api/"},next:{title:"Node API",permalink:"/docs/node/api/node-api"}},c={},l=[],s={toc:l},d="wrapper";function f(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"explorer-api"},"Explorer API"),(0,o.kt)("p",null,"Explorer API specifications (OpenAPI): ",(0,o.kt)("a",{parentName:"p",href:"http://172.104.249.147:8081/"},"http://172.104.249.147:8081/")))}f.isMDXComponent=!0}}]);